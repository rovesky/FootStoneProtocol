// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `RoleMaster.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [_System.Serializable]
        public partial struct MasterProperty
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public int str;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public int agil;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public int intel;

            #endregion

            partial void ice_initialize();

            #region Constructor

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public MasterProperty(int str, int agil, int intel)
            {
                this.str = str;
                this.agil = agil;
                this.intel = intel;
                ice_initialize();
            }

            #endregion

            #region Object members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public override int GetHashCode()
            {
                int h_ = 5381;
                IceInternal.HashUtil.hashAdd(ref h_, "::FootStone::GrainInterfaces::MasterProperty");
                IceInternal.HashUtil.hashAdd(ref h_, str);
                IceInternal.HashUtil.hashAdd(ref h_, agil);
                IceInternal.HashUtil.hashAdd(ref h_, intel);
                return h_;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public override bool Equals(object other)
            {
                if(!(other is MasterProperty))
                {
                    return false;
                }
                MasterProperty o = (MasterProperty)other;
                if(!this.str.Equals(o.str))
                {
                    return false;
                }
                if(!this.agil.Equals(o.agil))
                {
                    return false;
                }
                if(!this.intel.Equals(o.intel))
                {
                    return false;
                }
                return true;
            }

            #endregion

            #region Comparison members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static bool operator==(MasterProperty lhs, MasterProperty rhs)
            {
                return Equals(lhs, rhs);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static bool operator!=(MasterProperty lhs, MasterProperty rhs)
            {
                return !Equals(lhs, rhs);
            }

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public void ice_writeMembers(Ice.OutputStream ostr)
            {
                ostr.writeInt(this.str);
                ostr.writeInt(this.agil);
                ostr.writeInt(this.intel);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public void ice_readMembers(Ice.InputStream istr)
            {
                this.str = istr.readInt();
                this.agil = istr.readInt();
                this.intel = istr.readInt();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static void ice_write(Ice.OutputStream ostr, MasterProperty v)
            {
                v.ice_writeMembers(ostr);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static MasterProperty ice_read(Ice.InputStream istr)
            {
                var v = new MasterProperty();
                v.ice_readMembers(istr);
                return v;
            }

            #endregion
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [_System.Serializable]
        public partial struct RoleMaster
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public MasterProperty property;

            #endregion

            partial void ice_initialize();

            #region Constructor

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public RoleMaster(MasterProperty property)
            {
                this.property = property;
                ice_initialize();
            }

            #endregion

            #region Object members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public override int GetHashCode()
            {
                int h_ = 5381;
                IceInternal.HashUtil.hashAdd(ref h_, "::FootStone::GrainInterfaces::RoleMaster");
                IceInternal.HashUtil.hashAdd(ref h_, property);
                return h_;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public override bool Equals(object other)
            {
                if(!(other is RoleMaster))
                {
                    return false;
                }
                RoleMaster o = (RoleMaster)other;
                if(!this.property.Equals(o.property))
                {
                    return false;
                }
                return true;
            }

            #endregion

            #region Comparison members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static bool operator==(RoleMaster lhs, RoleMaster rhs)
            {
                return Equals(lhs, rhs);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static bool operator!=(RoleMaster lhs, RoleMaster rhs)
            {
                return !Equals(lhs, rhs);
            }

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public void ice_writeMembers(Ice.OutputStream ostr)
            {
                this.property.ice_writeMembers(ostr);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public void ice_readMembers(Ice.InputStream istr)
            {
                this.property.ice_readMembers(istr);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static void ice_write(Ice.OutputStream ostr, RoleMaster v)
            {
                v.ice_writeMembers(ostr);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            public static RoleMaster ice_read(Ice.InputStream istr)
            {
                var v = new RoleMaster();
                v.ice_readMembers(istr);
                return v;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IRoleMasterPush : Ice.Object, IRoleMasterPushOperations_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IRoleMaster : Ice.Object, IRoleMasterOperations_
        {
        }
    }
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public delegate void Callback_IRoleMasterPush_PropertyChanged();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public delegate void Callback_IRoleMaster_GetProperty(MasterProperty ret);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public delegate void Callback_IRoleMaster_SetProperty();
    }
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public interface IRoleMasterPushPrx : Ice.ObjectPrx
        {
            void PropertyChanged(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext());

            _System.Threading.Tasks.Task PropertyChangedAsync(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken());

            Ice.AsyncResult<Callback_IRoleMasterPush_PropertyChanged> begin_PropertyChanged(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext());

            Ice.AsyncResult begin_PropertyChanged(MasterProperty property, Ice.AsyncCallback callback, object cookie);

            Ice.AsyncResult begin_PropertyChanged(MasterProperty property, Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie);

            void end_PropertyChanged(Ice.AsyncResult asyncResult);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public interface IRoleMasterPrx : Ice.ObjectPrx
        {
            MasterProperty GetProperty(Ice.OptionalContext context = new Ice.OptionalContext());

            _System.Threading.Tasks.Task<MasterProperty> GetPropertyAsync(Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken());

            Ice.AsyncResult<Callback_IRoleMaster_GetProperty> begin_GetProperty(Ice.OptionalContext context = new Ice.OptionalContext());

            Ice.AsyncResult begin_GetProperty(Ice.AsyncCallback callback, object cookie);

            Ice.AsyncResult begin_GetProperty(Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie);

            MasterProperty end_GetProperty(Ice.AsyncResult asyncResult);

            void SetProperty(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext());

            _System.Threading.Tasks.Task SetPropertyAsync(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken());

            Ice.AsyncResult<Callback_IRoleMaster_SetProperty> begin_SetProperty(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext());

            Ice.AsyncResult begin_SetProperty(MasterProperty property, Ice.AsyncCallback callback, object cookie);

            Ice.AsyncResult begin_SetProperty(MasterProperty property, Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie);

            void end_SetProperty(Ice.AsyncResult asyncResult);
        }
    }
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public interface IRoleMasterPushOperations_
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            void PropertyChanged(MasterProperty property, Ice.Current current = null);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public interface IRoleMasterOperations_
        {
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            _System.Threading.Tasks.Task<MasterProperty> GetPropertyAsync(Ice.Current current = null);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
            _System.Threading.Tasks.Task SetPropertyAsync(MasterProperty property, Ice.Current current = null);
        }
    }
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        [_System.Serializable]
        public sealed class IRoleMasterPushPrxHelper : Ice.ObjectPrxHelperBase, IRoleMasterPushPrx
        {
            public IRoleMasterPushPrxHelper()
            {
            }

            public IRoleMasterPushPrxHelper(_System.Runtime.Serialization.SerializationInfo info, _System.Runtime.Serialization.StreamingContext context) : base(info, context)
            {
            }

            #region Synchronous operations

            public void PropertyChanged(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext())
            {
                try
                {
                    _iceI_PropertyChangedAsync(property, context, null, _System.Threading.CancellationToken.None, true).Wait();
                }
                catch(_System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public _System.Threading.Tasks.Task PropertyChangedAsync(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken())
            {
                return _iceI_PropertyChangedAsync(property, context, progress, cancel, false);
            }

            private _System.Threading.Tasks.Task _iceI_PropertyChangedAsync(MasterProperty iceP_property, Ice.OptionalContext context, _System.IProgress<bool> progress, _System.Threading.CancellationToken cancel, bool synchronous)
            {
                var completed = new IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
                _iceI_PropertyChanged(iceP_property, context, synchronous, completed);
                return completed.Task;
            }

            private const string _PropertyChanged_name = "PropertyChanged";

            private void _iceI_PropertyChanged(MasterProperty iceP_property, _System.Collections.Generic.Dictionary<string, string> context, bool synchronous, IceInternal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<object>(completed);
                outAsync.invoke(
                    _PropertyChanged_name,
                    Ice.OperationMode.Normal,
                    Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (Ice.OutputStream ostr) =>
                    {
                        iceP_property.ice_writeMembers(ostr);
                    });
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<Callback_IRoleMasterPush_PropertyChanged> begin_PropertyChanged(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext())
            {
                return begin_PropertyChanged(property, context, null, null, false);
            }

            public Ice.AsyncResult begin_PropertyChanged(MasterProperty property, Ice.AsyncCallback callback, object cookie)
            {
                return begin_PropertyChanged(property, new Ice.OptionalContext(), callback, cookie, false);
            }

            public Ice.AsyncResult begin_PropertyChanged(MasterProperty property, Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie)
            {
                return begin_PropertyChanged(property, context, callback, cookie, false);
            }

            public void end_PropertyChanged(Ice.AsyncResult asyncResult)
            {
                var resultI_ = IceInternal.AsyncResultI.check(asyncResult, this, _PropertyChanged_name);
                ((IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
            }

            private Ice.AsyncResult<Callback_IRoleMasterPush_PropertyChanged> begin_PropertyChanged(MasterProperty iceP_property, _System.Collections.Generic.Dictionary<string, string> context, Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
            {
                var completed = new IceInternal.OperationAsyncResultCompletionCallback<Callback_IRoleMasterPush_PropertyChanged, object>(
                    (Callback_IRoleMasterPush_PropertyChanged cb, object ret) =>
                    {
                        if(cb != null)
                        {
                            cb.Invoke();
                        }
                    },
                    this, _PropertyChanged_name, cookie, completedCallback);
                _iceI_PropertyChanged(iceP_property, context, synchronous, completed);
                return completed;
            }

            #endregion

            #region Checked and unchecked cast operations

            public static IRoleMasterPushPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPushPrx r = b as IRoleMasterPushPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPushPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPushPrx r = b as IRoleMasterPushPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPushPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                        h.iceCopyFrom(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IRoleMasterPushPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                        h.iceCopyFrom(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IRoleMasterPushPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPushPrx r = b as IRoleMasterPushPrx;
                if(r == null)
                {
                    IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPushPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                IRoleMasterPushPrxHelper h = new IRoleMasterPushPrxHelper();
                h.iceCopyFrom(bb);
                return h;
            }

            private static readonly string[] _ids =
            {
                "::FootStone::GrainInterfaces::IRoleMasterPush",
                "::Ice::Object"
            };

            public static string ice_staticId()
            {
                return _ids[0];
            }

            #endregion

            #region Marshaling support

            public static void write(Ice.OutputStream ostr, IRoleMasterPushPrx v)
            {
                ostr.writeProxy(v);
            }

            public static IRoleMasterPushPrx read(Ice.InputStream istr)
            {
                Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    IRoleMasterPushPrxHelper result = new IRoleMasterPushPrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        [_System.Serializable]
        public sealed class IRoleMasterPrxHelper : Ice.ObjectPrxHelperBase, IRoleMasterPrx
        {
            public IRoleMasterPrxHelper()
            {
            }

            public IRoleMasterPrxHelper(_System.Runtime.Serialization.SerializationInfo info, _System.Runtime.Serialization.StreamingContext context) : base(info, context)
            {
            }

            #region Synchronous operations

            public MasterProperty GetProperty(Ice.OptionalContext context = new Ice.OptionalContext())
            {
                try
                {
                    return _iceI_GetPropertyAsync(context, null, _System.Threading.CancellationToken.None, true).Result;
                }
                catch(_System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            public void SetProperty(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext())
            {
                try
                {
                    _iceI_SetPropertyAsync(property, context, null, _System.Threading.CancellationToken.None, true).Wait();
                }
                catch(_System.AggregateException ex_)
                {
                    throw ex_.InnerException;
                }
            }

            #endregion

            #region Async Task operations

            public _System.Threading.Tasks.Task<MasterProperty> GetPropertyAsync(Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken())
            {
                return _iceI_GetPropertyAsync(context, progress, cancel, false);
            }

            private _System.Threading.Tasks.Task<MasterProperty> _iceI_GetPropertyAsync(Ice.OptionalContext context, _System.IProgress<bool> progress, _System.Threading.CancellationToken cancel, bool synchronous)
            {
                iceCheckTwowayOnly(_GetProperty_name);
                var completed = new IceInternal.OperationTaskCompletionCallback<MasterProperty>(progress, cancel);
                _iceI_GetProperty(context, synchronous, completed);
                return completed.Task;
            }

            private const string _GetProperty_name = "GetProperty";

            private void _iceI_GetProperty(_System.Collections.Generic.Dictionary<string, string> context, bool synchronous, IceInternal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<MasterProperty>(completed);
                outAsync.invoke(
                    _GetProperty_name,
                    Ice.OperationMode.Idempotent,
                    Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    read: (Ice.InputStream istr) =>
                    {
                        MasterProperty ret = new MasterProperty();
                        ret.ice_readMembers(istr);
                        return ret;
                    });
            }

            public _System.Threading.Tasks.Task SetPropertyAsync(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext(), _System.IProgress<bool> progress = null, _System.Threading.CancellationToken cancel = new _System.Threading.CancellationToken())
            {
                return _iceI_SetPropertyAsync(property, context, progress, cancel, false);
            }

            private _System.Threading.Tasks.Task _iceI_SetPropertyAsync(MasterProperty iceP_property, Ice.OptionalContext context, _System.IProgress<bool> progress, _System.Threading.CancellationToken cancel, bool synchronous)
            {
                var completed = new IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
                _iceI_SetProperty(iceP_property, context, synchronous, completed);
                return completed.Task;
            }

            private const string _SetProperty_name = "SetProperty";

            private void _iceI_SetProperty(MasterProperty iceP_property, _System.Collections.Generic.Dictionary<string, string> context, bool synchronous, IceInternal.OutgoingAsyncCompletionCallback completed)
            {
                var outAsync = getOutgoingAsync<object>(completed);
                outAsync.invoke(
                    _SetProperty_name,
                    Ice.OperationMode.Normal,
                    Ice.FormatType.DefaultFormat,
                    context,
                    synchronous,
                    write: (Ice.OutputStream ostr) =>
                    {
                        iceP_property.ice_writeMembers(ostr);
                    });
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<Callback_IRoleMaster_GetProperty> begin_GetProperty(Ice.OptionalContext context = new Ice.OptionalContext())
            {
                return begin_GetProperty(context, null, null, false);
            }

            public Ice.AsyncResult begin_GetProperty(Ice.AsyncCallback callback, object cookie)
            {
                return begin_GetProperty(new Ice.OptionalContext(), callback, cookie, false);
            }

            public Ice.AsyncResult begin_GetProperty(Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie)
            {
                return begin_GetProperty(context, callback, cookie, false);
            }

            public MasterProperty end_GetProperty(Ice.AsyncResult asyncResult)
            {
                var resultI_ = IceInternal.AsyncResultI.check(asyncResult, this, _GetProperty_name);
                var outgoing_ = (IceInternal.OutgoingAsyncT<MasterProperty>)resultI_.OutgoingAsync;
                return outgoing_.getResult(resultI_.wait());
            }

            private Ice.AsyncResult<Callback_IRoleMaster_GetProperty> begin_GetProperty(_System.Collections.Generic.Dictionary<string, string> context, Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
            {
                iceCheckAsyncTwowayOnly(_GetProperty_name);
                var completed = new IceInternal.OperationAsyncResultCompletionCallback<Callback_IRoleMaster_GetProperty, MasterProperty>(
                    (Callback_IRoleMaster_GetProperty cb, MasterProperty ret) =>
                    {
                        if(cb != null)
                        {
                            cb.Invoke(ret);
                        }
                    },
                    this, _GetProperty_name, cookie, completedCallback);
                _iceI_GetProperty(context, synchronous, completed);
                return completed;
            }

            public Ice.AsyncResult<Callback_IRoleMaster_SetProperty> begin_SetProperty(MasterProperty property, Ice.OptionalContext context = new Ice.OptionalContext())
            {
                return begin_SetProperty(property, context, null, null, false);
            }

            public Ice.AsyncResult begin_SetProperty(MasterProperty property, Ice.AsyncCallback callback, object cookie)
            {
                return begin_SetProperty(property, new Ice.OptionalContext(), callback, cookie, false);
            }

            public Ice.AsyncResult begin_SetProperty(MasterProperty property, Ice.OptionalContext context, Ice.AsyncCallback callback, object cookie)
            {
                return begin_SetProperty(property, context, callback, cookie, false);
            }

            public void end_SetProperty(Ice.AsyncResult asyncResult)
            {
                var resultI_ = IceInternal.AsyncResultI.check(asyncResult, this, _SetProperty_name);
                ((IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
            }

            private Ice.AsyncResult<Callback_IRoleMaster_SetProperty> begin_SetProperty(MasterProperty iceP_property, _System.Collections.Generic.Dictionary<string, string> context, Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
            {
                var completed = new IceInternal.OperationAsyncResultCompletionCallback<Callback_IRoleMaster_SetProperty, object>(
                    (Callback_IRoleMaster_SetProperty cb, object ret) =>
                    {
                        if(cb != null)
                        {
                            cb.Invoke();
                        }
                    },
                    this, _SetProperty_name, cookie, completedCallback);
                _iceI_SetProperty(iceP_property, context, synchronous, completed);
                return completed;
            }

            #endregion

            #region Checked and unchecked cast operations

            public static IRoleMasterPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPrx r = b as IRoleMasterPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPrx r = b as IRoleMasterPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                        h.iceCopyFrom(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IRoleMasterPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                        h.iceCopyFrom(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IRoleMasterPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IRoleMasterPrx r = b as IRoleMasterPrx;
                if(r == null)
                {
                    IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                    h.iceCopyFrom(b);
                    r = h;
                }
                return r;
            }

            public static IRoleMasterPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                IRoleMasterPrxHelper h = new IRoleMasterPrxHelper();
                h.iceCopyFrom(bb);
                return h;
            }

            private static readonly string[] _ids =
            {
                "::FootStone::GrainInterfaces::IRoleMaster",
                "::Ice::Object"
            };

            public static string ice_staticId()
            {
                return _ids[0];
            }

            #endregion

            #region Marshaling support

            public static void write(Ice.OutputStream ostr, IRoleMasterPrx v)
            {
                ostr.writeProxy(v);
            }

            public static IRoleMasterPrx read(Ice.InputStream istr)
            {
                Ice.ObjectPrx proxy = istr.readProxy();
                if(proxy != null)
                {
                    IRoleMasterPrxHelper result = new IRoleMasterPrxHelper();
                    result.iceCopyFrom(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }
}

namespace FootStone
{
    namespace GrainInterfaces
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public abstract class IRoleMasterPushDisp_ : Ice.ObjectImpl, IRoleMasterPush
        {
            #region Slice operations

            public abstract void PropertyChanged(MasterProperty property, Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::FootStone::GrainInterfaces::IRoleMasterPush",
                "::Ice::Object"
            };

            public override bool ice_isA(string s, Ice.Current current = null)
            {
                return _System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(Ice.Current current = null)
            {
                return _ids[0];
            }

            public static new string ice_staticId()
            {
                return _ids[0];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static _System.Threading.Tasks.Task<Ice.OutputStream>
            iceD_PropertyChanged(IRoleMasterPush obj, IceInternal.Incoming inS, Ice.Current current)
            {
                Ice.ObjectImpl.iceCheckMode(Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                MasterProperty iceP_property;
                iceP_property = new MasterProperty();
                iceP_property.ice_readMembers(istr);
                inS.endReadParams();
                obj.PropertyChanged(iceP_property, current);
                return inS.setResult(inS.writeEmptyParams());
            }

            private static readonly string[] _all =
            {
                "PropertyChanged",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override _System.Threading.Tasks.Task<Ice.OutputStream>
            iceDispatch(IceInternal.Incoming inS, Ice.Current current)
            {
                int pos = _System.Array.BinarySearch(_all, current.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return iceD_PropertyChanged(this, inS, current);
                    }
                    case 1:
                    {
                        return Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 2:
                    {
                        return Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 3:
                    {
                        return Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 4:
                    {
                        return Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.1")]
        public abstract class IRoleMasterDisp_ : Ice.ObjectImpl, IRoleMaster
        {
            #region Slice operations

            public abstract _System.Threading.Tasks.Task<MasterProperty> GetPropertyAsync(Ice.Current current = null);

            public abstract _System.Threading.Tasks.Task SetPropertyAsync(MasterProperty property, Ice.Current current = null);

            #endregion

            #region Slice type-related members

            private static readonly string[] _ids =
            {
                "::FootStone::GrainInterfaces::IRoleMaster",
                "::Ice::Object"
            };

            public override bool ice_isA(string s, Ice.Current current = null)
            {
                return _System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids(Ice.Current current = null)
            {
                return _ids;
            }

            public override string ice_id(Ice.Current current = null)
            {
                return _ids[0];
            }

            public static new string ice_staticId()
            {
                return _ids[0];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static _System.Threading.Tasks.Task<Ice.OutputStream>
            iceD_GetProperty(IRoleMaster obj, IceInternal.Incoming inS, Ice.Current current)
            {
                Ice.ObjectImpl.iceCheckMode(Ice.OperationMode.Idempotent, current.mode);
                inS.readEmptyParams();
                return inS.setResultTask<MasterProperty>(obj.GetPropertyAsync(current),
                    (ostr, ret) =>
                    {
                        ret.ice_writeMembers(ostr);
                    });
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static _System.Threading.Tasks.Task<Ice.OutputStream>
            iceD_SetProperty(IRoleMaster obj, IceInternal.Incoming inS, Ice.Current current)
            {
                Ice.ObjectImpl.iceCheckMode(Ice.OperationMode.Normal, current.mode);
                var istr = inS.startReadParams();
                MasterProperty iceP_property;
                iceP_property = new MasterProperty();
                iceP_property.ice_readMembers(istr);
                inS.endReadParams();
                return inS.setResultTask(obj.SetPropertyAsync(iceP_property, current));
            }

            private static readonly string[] _all =
            {
                "GetProperty",
                "SetProperty",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override _System.Threading.Tasks.Task<Ice.OutputStream>
            iceDispatch(IceInternal.Incoming inS, Ice.Current current)
            {
                int pos = _System.Array.BinarySearch(_all, current.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current.id, current.facet, current.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return iceD_GetProperty(this, inS, current);
                    }
                    case 1:
                    {
                        return iceD_SetProperty(this, inS, current);
                    }
                    case 2:
                    {
                        return Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                    }
                    case 3:
                    {
                        return Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                    }
                    case 4:
                    {
                        return Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                    }
                    case 5:
                    {
                        return Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            #endregion
        }
    }
}
